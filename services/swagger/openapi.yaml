openapi: 3.0.0
info:
  title: Laboratories ListApi
  version: v1
servers:
  - url: http://127.0.0.1:8000
paths:
  /api/v1/laboratories/:
    get:
      description: "Get list of laboratories"
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Number of objects
                    example: 1000
                  total_pages:
                    type: integer
                    description: Number of pages
                    example: 20
                  prev:
                    type: integer
                    nullable: true
                    description: Previous page number
                    example: 1
                  next:
                    type: integer
                    nullable: true
                    description: Next page number
                    example: 2
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Laboratory"
  
  /api/v1/laboratories/{id}:
    get:
      description: "Get details of a laboratory by ID"
      parameters:
        - in: path
          name: id  
          required: true
          schema:
            type: string
            format: uuid
          description: Laboratory ID
        
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Laboratory"
                
  /api/v1/persons/:
    get:
      description: "Get list of persons"
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Number of objects
                    example: 1000
                  total_pages:
                    type: integer
                    description: Number of pages
                    example: 20
                  prev:
                    type: integer
                    nullable: true
                    description: Previous page number
                    example: 1
                  next:
                    type: integer
                    nullable: true
                    description: Next page number
                    example: 2
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Person"

  /api/v1/persons/{id}:
    get:
      description: "Get details of a person by ID"
      parameters:
        - in: path
          name: id  
          required: true
          schema:
            type: string
            format: uuid
          description: Person ID
        
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
                
  /api/v1/publications/:
    get:
      description: "Get list of publications"
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: string
        - name: query
          in: query
          description: Search query for filtering publications by name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Number of objects
                    example: 1000
                  total_pages:
                    type: integer
                    description: Number of pages
                    example: 20
                  prev:
                    type: integer
                    nullable: true
                    description: Previous page number
                    example: 1
                  next:
                    type: integer
                    nullable: true
                    description: Next page number
                    example: 2
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Publication"

  /api/v1/publications/{id}:
    get:
      description: "Get details of a publication by ID"
      parameters:
        - in: path
          name: id  
          required: true
          schema:
            type: string
            format: uuid
          description: Publication ID
        
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publication"

components:
  schemas:
    Laboratory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Laboratory ID
        title:
          type: string
          description: Title
          example: Crescent Star
        description:
          type: string
          description: Description
          example: In 1944, the Germans began rounding up the Jews of Rhodes.
        creation_date:
          type: string
          format: date
          description: Creation date
        activity_type:
          type: string
          description: Activity type
          example: scientific
        publications:
          type: array
          description: List of publications
          example: [Drama, Short]
          items:
            type: string
            description: Publication name
        heads:
          type: array
          description: List of heads
          example: [Darrell Geer, Michael Bond]
          items:
            type: string
            description: Head name
        interns:
          type: array
          description: List of interns
          example: [Turgut Turk Adiguzel]
          items:
            type: string
            description: Intern name
        staffs:
          type: array
          description: List of staffs
          example: [Turgut Turk Adiguzel]
          items:
            type: string
            description: Staff name

    Person:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Person ID
        full_name:
          type: string
          description: Full name
          example: John Doe

    Publication:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Publication ID
        name:
          type: string
          description: Name
          example: Drama
        description:
          type: string
          description: Description
          example: A drama novel
        authors:
          type: array
          description: List of authors
          example: [John Doe, Jane Smith]
          items:
            type: string
            description: Author name
        editors:
          type: array
          description: List of editors
          example: [John Doe, Jane Smith]
          items:
            type: string
            description: Editor name
        reviewers:
          type: array
          description: List of reviewers
          example: [John Doe, Jane Smith]
          items:
            type: string
            description: Reviewer name
